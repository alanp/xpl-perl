#!/usr/bin/perl -w

eval 'exec /usr/bin/perl -w -S $0 ${1+"$@"}'
    if 0; # not running under some shell

=head1 NAME

xpl-rrd-graphs - Perl script for producing graphs from xpl-rrd directory.

=head1 SYNOPSIS

  # search for rrd files under /var/lib/rrd and create graphs in /var/www/rrd
  xpl-rrd-graphs /var/lib/rrd /var/www/rrd

  # same again but only produce the hourly graphs
  xpl-rrd-graphs /var/lib/rrd /var/www/rrd 1h

=head1 DESCRIPTION

This script is produces image files containing graphs of data stored
in RRD database files.

=cut

use 5.006;
use strict;
use warnings;
use IO::File;
use File::Find;
use File::Path qw/mkpath/;
use POSIX qw/strftime/;
use RRDs;

$|=1;

my $data_dir = shift || "/var/xpl/rrd";
my $graph_dir = shift || "/var/www/localhost/htdocs";
my $todo;
if (@ARGV) {
  %$todo = map { $_ => 1 } @ARGV;
}

mkdir($graph_dir, 0755) unless (-d $graph_dir); ## no critic

my %rrds = ();

{
  sub wanted {
    return unless (/^(.*)\.rrd$/);
    my $base = $File::Find::dir eq $data_dir ?
      "" : substr($File::Find::dir, length($data_dir)+1);
    $rrds{$base}->{$1} =
      {
       rrd => $File::Find::name,
      };
    return 1;
  }

  find(\&wanted, $data_dir);
}

my $time = time;

my @graph =
  (
   {
    span => '2h',
    name => "2 Hours",
   },
   {
    span => '12h',
    name => "12 Hours",
   },
   {
    span => '1d',
    name => "1 Day",
   },
   {
    span => '7d',
    name => "1 Week",
   },
   {
    span => '14d',
    name => "Fortnight",
   },
   {
    span => '1m',
    name => "Month",
   },
   {
    span => '3mon',
    name => "3 Months",
   },
#   {
#    span => '6mon',
#    name => "6 Months",
#   },
#   {
#    span => '1y',
#    name => "1 Year",
#   },
#   {
#    span => '2y',
#    name => "2 Year",
#   },
  );

foreach my $dir (sort keys %rrds) {

  print "D: ", $dir, "\n";
  my $gd = $graph_dir."/".$dir;
  mkpath($gd, 0, 0755) unless (-d $gd); ## no critic

  foreach my $a (sort keys %{$rrds{$dir}}) {

    eval {
      print "  ", $a, " ";
      my $rrd = $rrds{$dir}->{$a}->{rrd};
      my $gb = $gd."/".$a;
      mkpath($gb, 0, 0755) unless (-d $gb); ## no critic
      my $sources = rrd_data_sources($rrd);
      foreach my $var (@$sources) {
        print $var, ": ";
        my $index = $gb."/$var.html";
        open my $fh, '>', $index or die "Failed to open $index: $!\n";
        my $title = 'for '.$var.' from '.$dir.'/'.$a;
#        $fh->print("<html><head><title>Graphs $title</title></head><body>\n");
#        $fh->print("<h1>Graphs $title</h1>");
	$fh->print("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">");
	$fh->print("<html><head><title>The Home Control Machine</title><link REL=\"STYLESHEET\" TYPE=\"text/css\" HREF=\"../../style.css\" Title=\"BlueSky 3.0 CSS\"></head>");
	$fh->print("<body><div class=\"nifty\"><b class=\"rtop\"><b class=\"r1\"></b><b class=\"r2\"></b><b class=\"r3\"></b><b class=\"r4\"></b></b>");
	$fh->print("<div class=\"nifty2\"><b class=\"rtop2\"><b class=\"r12\"></b><b class=\"r22\"></b><b class=\"r32\"></b><b class=\"r42\"></b></b>");
	$fh->print("<h1><span class=\"gray\">The&nbsp</span>Home Control<span class=\"gray\">&nbspMachine</span></h1><h2 id=\"slogan\">Look here to see what's happening</h2><br>");
	$fh->print("<div  id=\"menu\"><ul>");
	$fh->print("<li><a href=\"#\">Home</a></li>");
	$fh->print("<li><a href=\"/gpsdo.html\">GPSDO</a></li>");
	$fh->print("<li><a href=\"/ntp.html\">NTP</a></li>");
	$fh->print("<li><a href=\"/temp.html\">Temperature</a></li>");
	$fh->print("<li><a href=\"/hardware.html\">Hardware</a></li></ul></div>");
        $fh->printf("<p>&nbsp</p><p>Generated at %s.</p>\n",strftime("%Y-%m-%d %H:%M", localtime(time)));
        foreach my $rec (@graph) {
          my $span = $rec->{span};
          my $name = $rec->{name};
          my $file = $var."-".$span.".png";
          if ($todo && !exists $todo->{$span}) {
            # skip graph generation
          } else {
            print $span, ",";
            my $start = '-'.$span;
            my $end = 'now';
            RRDs::graph("$gb/$file",
                        "--title" => "Graph $title ($name)",
                        "--start" => $start, "--end"   => $end,
                        "--width" => 800,  "--height" => 200,
                        "--imgformat" => "PNG", "--interlaced", '--lazy',
                        "DEF:avg=$rrd:$var:AVERAGE", "DEF:min=$rrd:$var:MIN",
                        "DEF:max=$rrd:$var:MAX",
                        "LINE1:min#0EEFD2:C Min",
                        "LINE1:avg#EFD80E:C Avg",
                        "LINE1:max#EF500E:C Max",
                        "GPRINT:min:MIN:Min %7.2lf",
                        "VDEF:gavg=avg,AVERAGE", "GPRINT:gavg:Avg %7.2lf",
                        "GPRINT:max:MAX:Max %7.2lf\\l",
                        "COMMENT:".strftime('%Y-%m-%d %H\:%m\r',
                                            localtime(time)),
                       );
            my $err = RRDs::error;
            if ($err) {
              warn "ERROR creating $rrd: $err\n";
              next;
            }
          }
          $fh->print("<h3>$name</h3>\n");
          $fh->print("<img src=\"$file\" />\n");
        }
#        $fh->print("</body></html>\n");
	$fh->print("<center><div class=\"footer\">&copy; <a href=\"#\">Alan Page</a> 2013 | Valid CSS</a></div></center></div></div></body></html>");

        close $fh;
      }
      if ((scalar @$sources) == 1) {
        symlink($sources->[0].".html", $gb."/index.html");
      } else {
        my $index = $gb."/index.html";
        open my $fh, '>', $index or die "Failed to open $index: $!\n";
        my $title = " from ".$a;
        $fh->print("<html><head><title>Graphs $title</title></head><body>\n");
        $fh->print("<h1>Graphs $title</h1>");
        $fh->printf("<p>Generated at %s.</p>\n",
                    strftime("%Y-%m-%d %H:%M", localtime(time)));
        foreach my $var (@$sources) {
          $fh->print("<h2>$var</h2>\n");
          my $file = $var."-1d.png";
          $fh->print("<a href=\"$var\"><img src=\"$file\" /></a>\n");
        }
        $fh->print("</body></html>\n");
        close $fh;
      }
    };
    warn $@ if ($@);
    print "\n";
  }
}

sub rrd_data_sources {
  my $rrd = shift;

  my $hash = RRDs::info $rrd;
  return unless ($hash);
  my %ds;
  foreach my $key (keys %$hash){
    $ds{$1}++ if ($key =~ /^ds\[([^]]+)\]/);
  }
  return [keys %ds];
}

=head1 SEE ALSO

xpl-rrd(1), rrdtool(1), RRDs(3)

Project website: http://www.xpl-perl.org.uk/

=head1 AUTHOR

Mark Hindess, E<lt>soft-xpl-perl@temporalanomaly.comE<gt>

=head1 COPYRIGHT

Copyright (C) 2007, 2009 by Mark Hindess

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.7 or,
at your option, any later version of Perl 5 you may have available.

=cut
